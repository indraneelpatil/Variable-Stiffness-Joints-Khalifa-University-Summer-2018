<?xml version="1.0" ?>
<robot name="khalifa_manipulator" xmlns:xacro="http://www.ros.org/wiki/xacro">
	
	<xacro:property name="mass" value="1.0" />
	<xacro:property name="width" value="0.1" />
	
	<material name="blue">
		<color rgba="0 0 0.8 1"/>
	</material>
	
	<material name="white">
		<color rgba="1 1 1 1"/>
	</material>
	
	<link name="world"/>
	
	<joint name="base_link_to_gazebo" type="fixed">
		<parent link="world"/>
		<child link="base_link"/>
	</joint>
	
	
	<link name="base_link">
		<visual>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 2"/>
			</geometry>
			<material name="blue"/>
		</visual>
		
		<collision>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 2"/>
			</geometry>
		</collision>
		
		<inertial>
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<mass value="${mass}"/>
			<inertia 
				ixx="${mass / 12.0 * (width*width + 2*2)}" ixy="0.0" ixz="0.0"
	  			iyy="${mass / 12.0 * (2*2 + width*width)}" iyz="0.0"
				izz="${mass / 12.0 * (width*width + width*width)}"/>
		</inertial>
	</link>
	
	
	<joint name="joint1" type="revolute">
    	<parent link="base_link"/>
    	<child link="link1"/>
    	<origin xyz="0 ${width} 0.95 " rpy="0 0 0"/>
    	<axis xyz="0 1 0"/>
    	<!-- dynamics damping="100.0" friction="0.0" spring_reference="0.1" spring_stiffness="10" -->
    	<limit effort="1000.0" lower="0.0" upper="1.0" velocity="0.5"/>  <!-- In Radians -->
	</joint>
	
	
	<link name="link1">
		<visual>
			<origin xyz="0 0 0.45" rpy="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 1"/>
			</geometry>
			<material name="white"/>
		</visual>
		
		<collision>
			<origin xyz="0 0 0.45" rpy="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 1"/>
			</geometry>
		</collision>
		
		<inertial>
			<origin xyz="0 0 0.45" rpy="0 0 0"/>
			<mass value="${mass}"/>
			<inertia 
				ixx="${mass / 12.0 * (width*width + 1*1)}" ixy="0.0" ixz="0.0"
	  			iyy="${mass / 12.0 * (1*1 + width*width)}" iyz="0.0"
				izz="${mass / 12.0 * (width*width + width*width)}"/>
		</inertial>
	</link>
	
	<joint name="joint2" type="revolute">
    	<parent link="link1"/>
    	<child link="link2"/>
    	<origin xyz="0 ${width} 0.90 " rpy="0 0 0"/>
    	<axis xyz="0 1 0"/>
    	<!-- dynamics damping="100.0" friction="0.0" spring_reference="0.1" spring_stiffness="0" -->
    	<limit effort="1000.0" lower="0.0" upper="1.0" velocity="0.5"/>  <!-- In Radians -->
	</joint>
	
	<link name="link2">
		<visual>
			<origin xyz="0 0 0.45" rpy="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 1"/>
			</geometry>
			<material name="blue"/>
		</visual>
		
		<collision>
			<origin xyz="0 0 0.45" rpy="0 0 0"/>
			<geometry>
				<box size="0.1 0.1 1"/>
			</geometry>
		</collision>
		
		<inertial>
			<origin xyz="0 0 0.45" rpy="0 0 0"/>
			<mass value="${mass}"/>
			<inertia 
				ixx="${mass / 12.0 * (width*width + 1*1)}" ixy="0.0" ixz="0.0"
	  			iyy="${mass / 12.0 * (1*1 + width*width)}" iyz="0.0"
				izz="${mass / 12.0 * (width*width + width*width)}"/>
		</inertial>
	</link>
	
	<gazebo>
		<plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
			<robotNamespace>/rrserial</robotNamespace>
		</plugin> t2=math.acos(c/(2*l1*l2))
    
        k1=l1+l2*math.cos(t2)
        k2=l2*math.sin(t2)
    
        t1=math.atan2(z,x) - math.atan2(k2, k1)
    
	</gazebo>
		
	
	<transmission name="tran1">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="joint1">
			<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="motor1">
      		<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      		<mechanicalReduction>1</mechanicalReduction>
    	</actuator>
	</transmission>
	
	<transmission name="tran2">
		<type>transmission_interface/SimpleTransmission</type>
		<joint name="joint2">
			<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
		</joint>
		<actuator name="motor2">
      		<hardwareInterface>hardware_interface/EffortJointInterface</hardwareInterface>
      		<mechanicalReduction>1</mechanicalReduction>
    	</actuator>
	</transmission>
	
</robot>
	
	
	
	
	
	
				